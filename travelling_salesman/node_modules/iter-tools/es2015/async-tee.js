"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = tee;

var _promise = _interopRequireDefault(require("@babel/runtime/core-js/promise"));

var _from = _interopRequireDefault(require("@babel/runtime/core-js/array/from"));

var _awaitAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/awaitAsyncGenerator"));

var _wrapAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapAsyncGenerator"));

var _range = _interopRequireDefault(require("./range"));

var _map = _interopRequireDefault(require("./map"));

var _asyncIter = _interopRequireDefault(require("./async-iter"));

var _dequeue = _interopRequireDefault(require("dequeue"));

function tee(iterable, number) {
  number = number || 2;
  iterable = (0, _asyncIter.default)(iterable);
  const arrays = (0, _from.default)((0, _map.default)(() => new _dequeue.default(), (0, _range.default)(number)));
  let done = false;

  function fetch() {
    return new _promise.default((resolve, reject) => {
      iterable.next().then(newItem => {
        if (newItem.done) {
          done = true;
          return resolve();
        } else {
          arrays.forEach(ar => ar.push(newItem.value));
          return resolve();
        }
      }).catch(err => reject(err));
    });
  }

  function teeGen(_x) {
    return _teeGen.apply(this, arguments);
  }

  function _teeGen() {
    _teeGen = (0, _wrapAsyncGenerator2.default)(function* (a) {
      while (true) {
        if (a.length) {
          yield a.shift();
        } else if (done) {
          return;
        } else {
          yield (0, _awaitAsyncGenerator2.default)(fetch());
        }
      }
    });
    return _teeGen.apply(this, arguments);
  }

  return arrays.map(a => teeGen(a));
}

module.exports = exports["default"];