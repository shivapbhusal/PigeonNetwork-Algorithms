import _Symbol$iterator from "@babel/runtime/core-js/symbol/iterator";
import _getIterator from "@babel/runtime/core-js/get-iterator";
import entries from './entries';
const emptyArr = [];
export default function iter(iterable, ...args) {
  if (iterable == null) {
    return _getIterator(emptyArr);
  } else if (iterable[_Symbol$iterator]) {
    return iterable[_Symbol$iterator](...args);
  } else if (typeof iterable === 'object') {
    return entries(iterable);
  } else if (typeof iterable === 'function') {
    return iter(iterable(...args));
  }

  throw new Error('The argument is not a generator, iterable, or object');
}