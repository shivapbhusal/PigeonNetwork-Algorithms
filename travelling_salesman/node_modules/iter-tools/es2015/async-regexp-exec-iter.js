"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = curriedRegexpExecIter;

var _wrapAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapAsyncGenerator"));

var _awaitAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/awaitAsyncGenerator"));

var _asyncGeneratorDelegate2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncGeneratorDelegate"));

var _asyncIterator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncIterator"));

var _regexpExec = _interopRequireDefault(require("./regexp-exec"));

function regexpExecIter(_x, _x2) {
  return _regexpExecIter.apply(this, arguments);
}

function _regexpExecIter() {
  _regexpExecIter = (0, _wrapAsyncGenerator2.default)(function* (re, iterable) {
    let matches;
    let buffer = '';
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;

    var _iteratorError;

    try {
      for (var _iterator = (0, _asyncIterator2.default)(iterable), _step, _value; _step = yield (0, _awaitAsyncGenerator2.default)(_iterator.next()), _iteratorNormalCompletion = _step.done, _value = yield (0, _awaitAsyncGenerator2.default)(_step.value), !_iteratorNormalCompletion; _iteratorNormalCompletion = true) {
        const chunk = _value;
        if (chunk === '') continue;
        let lastIndex = 0;
        matches = [];
        buffer += chunk;

        for (const match of (0, _regexpExec.default)(re, buffer)) {
          if (match[0] === '') {
            continue;
          }

          lastIndex = re.lastIndex - match[0].length;
          matches.push(match);

          if (matches.length === 2) {
            yield matches.shift();
          }
        }

        buffer = buffer.slice(lastIndex);
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          yield (0, _awaitAsyncGenerator2.default)(_iterator.return());
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    if (matches && matches.length) {
      yield* (0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(matches), _awaitAsyncGenerator2.default);
    }
  });
  return _regexpExecIter.apply(this, arguments);
}

function curriedRegexpExecIter(re, iterable) {
  if (typeof iterable === 'undefined') {
    return iterable => regexpExecIter(re, iterable);
  }

  return regexpExecIter(re, iterable);
}

module.exports = exports["default"];