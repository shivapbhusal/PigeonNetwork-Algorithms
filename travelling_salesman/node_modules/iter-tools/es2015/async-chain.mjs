import _wrapAsyncGenerator from "@babel/runtime/helpers/wrapAsyncGenerator";
import _awaitAsyncGenerator from "@babel/runtime/helpers/awaitAsyncGenerator";
import _asyncIterator from "@babel/runtime/helpers/asyncIterator";
import _asyncGeneratorDelegate from "@babel/runtime/helpers/asyncGeneratorDelegate";
import asyncIter from './async-iter';
export default function chain() {
  return _chain.apply(this, arguments);
}

function _chain() {
  _chain = _wrapAsyncGenerator(function* (...args) {
    for (let i = 0; i < args.length; i++) {
      yield* _asyncGeneratorDelegate(_asyncIterator(asyncIter(args[i])), _awaitAsyncGenerator);
    }
  });
  return _chain.apply(this, arguments);
}