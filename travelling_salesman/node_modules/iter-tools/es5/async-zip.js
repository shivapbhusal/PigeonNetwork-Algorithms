"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = zip;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _promise = _interopRequireDefault(require("@babel/runtime/core-js/promise"));

var _awaitAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/awaitAsyncGenerator"));

var _wrapAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapAsyncGenerator"));

var _asyncIter = _interopRequireDefault(require("./async-iter"));

function zip() {
  return _zip.apply(this, arguments);
}

function _zip() {
  _zip = (0, _wrapAsyncGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee() {
    var iters,
        results,
        done,
        _args = arguments;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            iters = Array.prototype.map.call(_args, function (arg) {
              return (0, _asyncIter.default)(arg);
            });

          case 1:
            if (!true) {
              _context.next = 12;
              break;
            }

            _context.next = 4;
            return (0, _awaitAsyncGenerator2.default)(_promise.default.all(iters.map(function (iter) {
              return iter.next();
            })));

          case 4:
            results = _context.sent;
            done = results.some(function (r) {
              return r.done;
            });

            if (!done) {
              _context.next = 8;
              break;
            }

            return _context.abrupt("return");

          case 8:
            _context.next = 10;
            return results.map(function (r) {
              return r.value;
            });

          case 10:
            _context.next = 1;
            break;

          case 12:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
  return _zip.apply(this, arguments);
}

module.exports = exports["default"];