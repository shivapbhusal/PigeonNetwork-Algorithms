"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = curriedSlice;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _awaitAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/awaitAsyncGenerator"));

var _wrapAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapAsyncGenerator"));

var _asyncIterator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncIterator"));

var _asyncIter = _interopRequireDefault(require("./async-iter"));

function slice(_x, _x2) {
  return _slice.apply(this, arguments);
}

function _slice() {
  _slice = (0, _wrapAsyncGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(opts, iterable) {
    var start, step, end, currentPos, nextValidPos, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, item;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            opts = typeof opts === 'number' ? {
              end: opts,
              start: 0
            } : opts;
            step = typeof opts.step === 'undefined' ? 1 : opts.step;
            end = typeof opts.end === 'undefined' ? step > 0 ? Infinity : -Infinity : opts.end;
            start = opts.start ? opts.start : 0;
            currentPos = 0;
            nextValidPos = start;
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _context.prev = 8;
            _iterator = (0, _asyncIterator2.default)((0, _asyncIter.default)(iterable));

          case 10:
            _context.next = 12;
            return (0, _awaitAsyncGenerator2.default)(_iterator.next());

          case 12:
            _step = _context.sent;
            _iteratorNormalCompletion = _step.done;
            _context.next = 16;
            return (0, _awaitAsyncGenerator2.default)(_step.value);

          case 16:
            _value = _context.sent;

            if (_iteratorNormalCompletion) {
              _context.next = 29;
              break;
            }

            item = _value;

            if (!(currentPos >= end)) {
              _context.next = 21;
              break;
            }

            return _context.abrupt("break", 29);

          case 21:
            if (!(nextValidPos === currentPos)) {
              _context.next = 25;
              break;
            }

            _context.next = 24;
            return item;

          case 24:
            nextValidPos += step;

          case 25:
            currentPos++;

          case 26:
            _iteratorNormalCompletion = true;
            _context.next = 10;
            break;

          case 29:
            _context.next = 35;
            break;

          case 31:
            _context.prev = 31;
            _context.t0 = _context["catch"](8);
            _didIteratorError = true;
            _iteratorError = _context.t0;

          case 35:
            _context.prev = 35;
            _context.prev = 36;

            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {
              _context.next = 40;
              break;
            }

            _context.next = 40;
            return (0, _awaitAsyncGenerator2.default)(_iterator.return());

          case 40:
            _context.prev = 40;

            if (!_didIteratorError) {
              _context.next = 43;
              break;
            }

            throw _iteratorError;

          case 43:
            return _context.finish(40);

          case 44:
            return _context.finish(35);

          case 45:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[8, 31, 35, 45], [36,, 40, 44]]);
  }));
  return _slice.apply(this, arguments);
}

function curriedSlice(opts, iterable) {
  if (!iterable) {
    return function (iterable) {
      return slice(opts, iterable);
    };
  }

  return slice(opts, iterable);
}

module.exports = exports["default"];