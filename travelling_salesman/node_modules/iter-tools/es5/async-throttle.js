"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = curriedAsyncThrottle;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _promise = _interopRequireDefault(require("@babel/runtime/core-js/promise"));

var _awaitAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/awaitAsyncGenerator"));

var _wrapAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapAsyncGenerator"));

var _asyncIterator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncIterator"));

var _asyncIter = _interopRequireDefault(require("./async-iter"));

function delay(ms) {
  if (ms <= 0) return _promise.default.resolve();
  return new _promise.default(function (resolve) {
    return setTimeout(resolve, ms);
  });
}

function asyncThrottle(_x, _x2) {
  return _asyncThrottle.apply(this, arguments);
}

function _asyncThrottle() {
  _asyncThrottle = (0, _wrapAsyncGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(ms, iterable) {
    var waitSince, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, item;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            waitSince = 0;
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _context.prev = 3;
            _iterator = (0, _asyncIterator2.default)((0, _asyncIter.default)(iterable));

          case 5:
            _context.next = 7;
            return (0, _awaitAsyncGenerator2.default)(_iterator.next());

          case 7:
            _step = _context.sent;
            _iteratorNormalCompletion = _step.done;
            _context.next = 11;
            return (0, _awaitAsyncGenerator2.default)(_step.value);

          case 11:
            _value = _context.sent;

            if (_iteratorNormalCompletion) {
              _context.next = 22;
              break;
            }

            item = _value;
            _context.next = 16;
            return (0, _awaitAsyncGenerator2.default)(delay(ms - (Date.now() - waitSince)));

          case 16:
            waitSince = Date.now();
            _context.next = 19;
            return item;

          case 19:
            _iteratorNormalCompletion = true;
            _context.next = 5;
            break;

          case 22:
            _context.next = 28;
            break;

          case 24:
            _context.prev = 24;
            _context.t0 = _context["catch"](3);
            _didIteratorError = true;
            _iteratorError = _context.t0;

          case 28:
            _context.prev = 28;
            _context.prev = 29;

            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {
              _context.next = 33;
              break;
            }

            _context.next = 33;
            return (0, _awaitAsyncGenerator2.default)(_iterator.return());

          case 33:
            _context.prev = 33;

            if (!_didIteratorError) {
              _context.next = 36;
              break;
            }

            throw _iteratorError;

          case 36:
            return _context.finish(33);

          case 37:
            return _context.finish(28);

          case 38:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[3, 24, 28, 38], [29,, 33, 37]]);
  }));
  return _asyncThrottle.apply(this, arguments);
}

function curriedAsyncThrottle(ms, iterable) {
  if (!iterable) {
    return function (iterable) {
      return asyncThrottle(ms, iterable);
    };
  }

  return asyncThrottle(ms, iterable);
}

module.exports = exports["default"];