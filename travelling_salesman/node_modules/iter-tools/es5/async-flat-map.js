"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = curriedFlatMap;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _wrapAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapAsyncGenerator"));

var _awaitAsyncGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/awaitAsyncGenerator"));

var _asyncGeneratorDelegate2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncGeneratorDelegate"));

var _asyncIterator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncIterator"));

var _asyncMap = _interopRequireDefault(require("./async-map"));

function flatMap(_x, _x2) {
  return _flatMap.apply(this, arguments);
}

function _flatMap() {
  _flatMap = (0, _wrapAsyncGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(func, iterable) {
    var mapIter, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, item;

    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            mapIter = (0, _asyncMap.default)(func);
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _context.prev = 3;
            _iterator = (0, _asyncIterator2.default)(mapIter(iterable));

          case 5:
            _context.next = 7;
            return (0, _awaitAsyncGenerator2.default)(_iterator.next());

          case 7:
            _step = _context.sent;
            _iteratorNormalCompletion = _step.done;
            _context.next = 11;
            return (0, _awaitAsyncGenerator2.default)(_step.value);

          case 11:
            _value = _context.sent;

            if (_iteratorNormalCompletion) {
              _context.next = 18;
              break;
            }

            item = _value;
            return _context.delegateYield((0, _asyncGeneratorDelegate2.default)((0, _asyncIterator2.default)(item), _awaitAsyncGenerator2.default), "t0", 15);

          case 15:
            _iteratorNormalCompletion = true;
            _context.next = 5;
            break;

          case 18:
            _context.next = 24;
            break;

          case 20:
            _context.prev = 20;
            _context.t1 = _context["catch"](3);
            _didIteratorError = true;
            _iteratorError = _context.t1;

          case 24:
            _context.prev = 24;
            _context.prev = 25;

            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {
              _context.next = 29;
              break;
            }

            _context.next = 29;
            return (0, _awaitAsyncGenerator2.default)(_iterator.return());

          case 29:
            _context.prev = 29;

            if (!_didIteratorError) {
              _context.next = 32;
              break;
            }

            throw _iteratorError;

          case 32:
            return _context.finish(29);

          case 33:
            return _context.finish(24);

          case 34:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this, [[3, 20, 24, 34], [25,, 29, 33]]);
  }));
  return _flatMap.apply(this, arguments);
}

function curriedFlatMap(func, iterable) {
  if (!iterable) {
    return function (iterable) {
      return flatMap(func, iterable);
    };
  }

  return flatMap(func, iterable);
}

module.exports = exports["default"];